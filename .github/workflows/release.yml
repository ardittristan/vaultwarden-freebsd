name: Create release
on:
  workflow_dispatch:
    inputs:
      always_build:
        type: boolean
        default: false
        description: Build regardless of current status
      draft_build:
        type: boolean
        default: false
        description: Create draft release instead of normal release
      artifact_build:
        type: boolean
        default: false
        description: Create artifacts instead of releases

concurrency: 
  group: release-builder
  cancel-in-progress: false

jobs:
  shouldbuild:
    name: Should Build
    runs-on: ubuntu-latest
    outputs:
      result: ${{ fromJson(steps.checker.outputs.result).result }}
      currCommit: ${{ fromJson(steps.checker.outputs.result).currCommit }}
      currRelease: ${{ fromJson(steps.checker.outputs.result).currRelease }}
      currWebRelease: ${{ fromJson(steps.checker.outputs.result).currWebRelease }}
    permissions: 
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: actions/github-script@v7
        id: checker
        with:
          retries: 3
          # https://replit.com/@ardittristan/UntriedInternationalEngineering#index.js
          script: |
            const fs = require("fs");

            const currCommit = (
              await github.rest.repos.listCommits({
                owner: "dani-garcia",
                repo: "vaultwarden",
                per_page: 1,
              })
            ).data[0].sha.substring(0, 8);

            const currRelease = (
              await github.rest.repos.getLatestRelease({
                owner: "dani-garcia",
                repo: "vaultwarden",
              })
            ).data.tag_name;

            const currWebRelease = (
              await github.rest.repos.getLatestRelease({
                owner: "dani-garcia",
                repo: "bw_web_builds",
              })
            ).data.tag_name.replace("v", "");

            if (
              !fs.existsSync("${{ github.workspace }}/store/lastCommitChecked") ||
              !fs.existsSync("${{ github.workspace }}/store/lastWebRelease")
            )
              return {
                result: true,
                currCommit,
                currRelease,
                currWebRelease,
              };

            const lastCommit = fs
              .readFileSync("${{ github.workspace }}/store/lastCommitChecked")
              .trim();
            const lastWebRelease = fs
              .readFileSync("${{ github.workspace }}/store/lastWebRelease")
              .trim();

            return {
              result: currCommit !== lastCommit || currWebRelease !== lastWebRelease,
              currCommit,
              currRelease,
              currWebRelease,
            };

  build:
    name: Build ${{ matrix.version }}
    needs: [shouldbuild]
    if: ${{ needs.shouldbuild.outputs.result || inputs.always_build }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        main-job:
          - '14.0'
        versions:
          - '14.0,13.3,13.2,12.4'
        version:
          - '14.0'
          - '13.3'
          - '13.2'
          - '12.4'
        include:
          - repo: http://pkg.FreeBSD.org/${ABI}/latest
          - repoesc: http:\/\/pkg.FreeBSD.org\/${ABI}\/latest
          - repoprefix: 'pkg+'
          - abiversion: 'latest'
          - makeargs: ''
          - beforebuild: ''
          - afterawk: ''

          - version: '14.0'
            abi: 'FreeBSD:14:amd64'

          - version: '13.3'
            abi: 'FreeBSD:13:amd64'

          - version: '13.2'
            abi: 'FreeBSD:13:amd64'
            abiversion: '13.2'

          - version: '12.4'
            abi: 'FreeBSD:12:amd64'
            repo: http://mirror.sg.gs/freebsd-pkg/${ABI}/latest
            repoesc: http:\/\/mirror.sg.gs\/freebsd-pkg\/${ABI}\/latest
            repoprefix: ''
            makeargs: 'ALLOW_UNSUPPORTED_SYSTEM=yes CARGO_BUILDDEP=no CARGO=${HOME}/.cargo/bin/cargo RUSTC=${HOME}/.cargo/bin/rustc RUSTDOC=${HOME}/.cargo/bin/rustdoc'
            beforebuild: "pkg install -y curl && curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y"
            afterawk: "| awk '{gsub(/rust /,\u0022\u0022)}1;'"
    steps:
      - uses: actions/checkout@v4
      - name: Setup
        shell: bash
        run: |
          mkdir -p ${{ github.workspace }}/repo/${{ matrix.abi }}/${{ matrix.abiversion }}/All
          mkdir "${GITHUB_WORKSPACE}/work"
          sed -i "s/^export VM_INSTALL_CMD$/export VM_INSTALL_CMD=\$'mkdir -p \/usr\/local\/etc\/pkg\/repos \&\& echo \\\\'FreeBSD: { url: \"${{ matrix.repoprefix }}"'${{ matrix.repoesc }}'"\" }\\\\' > \/usr\/local\/etc\/pkg\/repos\/FreeBSD.conf \&\& pkg  install  -y '/" /home/runner/work/_actions/vmactions/freebsd-vm/v*/run.sh
          echo "$(</home/runner/work/_actions/vmactions/freebsd-vm/v*/run.sh )"
      - name: Setup Lock
        if: ${{ matrix.version == matrix.main-job }}
        uses: rakles/matrix-lock@v1.0.0
        with:
          step: init
          order: ${{ matrix.versions }}
      - name: Build
        uses: vmactions/freebsd-vm@v1
        with:
          release: ${{ matrix.version }}
          sync: sshfs
          usesh: true
          prepare: |
            mkdir -p /usr/local/etc/pkg/repos
            echo 'FreeBSD: { url: "${{ matrix.repoprefix }}${{ matrix.repo }}" }' > /usr/local/etc/pkg/repos/FreeBSD.conf
            pkg install -y git
          run: |
            mkdir -p /usr/local/etc/pkg/repos
            echo 'FreeBSD: { url: "${{ matrix.repoprefix }}${{ matrix.repo }}" }' > /usr/local/etc/pkg/repos/FreeBSD.conf
            set -e -x
            git clone --depth=1 https://git.FreeBSD.org/ports.git /usr/ports
            ${{ matrix.beforebuild }}
            cd /usr/ports/www/vaultwarden-web_vault
            sed -i '' 's/\(PORTVERSION=\t\).*$/\1${{ needs.shouldbuild.outputs.currWebRelease }}/' /usr/ports/www/vaultwarden-web_vault/Makefile
            pkg install -y `make build-depends-list | awk '{gsub(/^.*\//,"");ORS=FS;}1; END{print "\n"}' ${{ matrix.afterawk }}`
            make makesum BATCH=yes ${{ matrix.makeargs }}
            make install BATCH=yes ${{ matrix.makeargs }}
            pkg create -o "${GITHUB_WORKSPACE}/work" vaultwarden_web-vault
            cd /usr/ports/security/vaultwarden
            sed -i '' 's/\(DISTVERSION=\t\).*$/\1${{ needs.shouldbuild.outputs.currRelease }}/' /usr/ports/security/vaultwarden/Makefile
            sed -i '' 's/\(PORTREVISION=\t.*\)$/\1${{ needs.shouldbuild.outputs.currCommit }}/' /usr/ports/security/vaultwarden/Makefile
            sed -i '' 's/\(USE_GITHUB=\tyes\)$/\1\nGH_TAGNAME=\tmain/' /usr/ports/security/vaultwarden/Makefile
            pkg install -y `make build-depends-list | awk '{gsub(/^.*\//,"");ORS=FS;}1; END{print "\n"}' ${{ matrix.afterawk }}` pkgconf
            make makesum BATCH=yes ${{ matrix.makeargs }}
            make cargo-crates BATCH=yes ${{ matrix.makeargs }} > /usr/ports/security/vaultwarden/Makefile.crates
            cat /usr/ports/security/vaultwarden/Makefile.crates
            make makesum BATCH=yes ${{ matrix.makeargs }}
            echo `mtree -p /usr/ports/security/vaultwarden`
            make install BATCH=yes ${{ matrix.makeargs }}
            pkg create -o "${GITHUB_WORKSPACE}/work" vaultwarden
            cd "${GITHUB_WORKSPACE}"
            cp -RL "${GITHUB_WORKSPACE}/work/" "${GITHUB_WORKSPACE}/repo/${{ matrix.abi }}/${{ matrix.abiversion }}/All"
            pkg repo "${GITHUB_WORKSPACE}/repo/${{ matrix.abi }}/${{ matrix.abiversion }}"
            for f in $(find ./repo/* -type l); do cp $(readlink -f %R "$f") ./repo/tmp; rm "$f"; mv ./repo/tmp "$f"; done
            cd "${GITHUB_WORKSPACE}/work/"
            for f in *; do mv "$f" "freebsd${{ matrix.version }}_$f"; done
      - name: Wait for lock
        uses: rakles/matrix-lock@v1.0.0
        with:
          step: wait
          id: ${{ matrix.version }}
          retry-delay: 15
          retry-count: 120
      - name: Commit
        uses: github-actions-x/commit@v2.9
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: Update ${{ matrix.version }}
          files: ${{ github.workspace }}/repo/${{ matrix.abi }}/${{ matrix.abiversion }}/
          rebase: true
          force-add: true
          name: GitHub Actions
          email: actions@github.com
      - name: Release Web_vault
        if: ${{ !inputs.artifact_build }}
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: ${{ github.workspace }}/work/*vaultwarden_web-vault-*.pkg
          makeLatest: false
          tag: vaultwarden_web-vault-${{ needs.shouldbuild.outputs.currWebRelease }}
          omitBody: true
          commit: ${{ github.ref_name }}
          draft: ${{ !!inputs.draft_build }}
      - name: Release Vaultwarden
        if: ${{ !inputs.artifact_build }}
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: ${{ github.workspace }}/work/*vaultwarden-*.pkg
          makeLatest: false
          tag: vaultwarden-${{ needs.shouldbuild.outputs.currRelease }}_${{ github.run_number }}-${{ needs.shouldbuild.outputs.currCommit }}
          omitBody: true
          commit: ${{ github.ref_name }}
          draft: ${{ !!inputs.draft_build }}
      - run: |
          mv ${{ github.workspace }}/work/*vaultwarden-*.pkg ${{ github.workspace }}/work/freebsd${{ matrix.version }}_vaultwarden.pkg
          mv ${{ github.workspace }}/work/*vaultwarden_web-vault-*.pkg ${{ github.workspace }}/work/freebsd${{ matrix.version }}_vaultwarden_web-vault.pkg
      - name: Update Latest
        if: ${{ !inputs.draft_build && !inputs.artifact_build }}
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: "${{ github.workspace }}/work/freebsd${{ matrix.version }}_vaultwarden.pkg,${{ github.workspace }}/work/freebsd${{ matrix.version }}_vaultwarden_web-vault.pkg"
          makeLatest: true
          tag: latest-release
          omitBody: true
          commit: ${{ github.ref_name }}
      - name: Upload Artifacts
        if: ${{ inputs.artifact_build }}
        uses: actions/upload-artifact@v4
        with:
          name: freebsd${{ matrix.version }}
          path: ${{ github.workspace }}/work/*
          retention-days: 7
      - name: Release lock
        if: ${{ success() || failure() }}
        uses: rakles/matrix-lock@v1.0.0
        with:
          step: continue
          id: ${{ matrix.version }}

  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs: [build]
    permissions:
      contents: read
      pages: write
      id-token: write
    concurrency: 
      group: pages
      cancel-in-progress: false
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    if: ${{ !inputs.draft_build && !inputs.artifact_build }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/configure-pages@v5
      - uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ github.workspace }}/repo/
      - uses: actions/deploy-pages@v4
        id: deployment

  finalize:
    name: Finalize
    runs-on: ubuntu-latest
    needs: [build,shouldbuild]
    permissions: 
      contents: write
    if: ${{ !inputs.draft_build && !inputs.artifact_build }}
    steps:
      - uses: actions/checkout@v4
      - name: Update store
        run: |
          echo "${{ needs.shouldbuild.outputs.currCommit }}" > "${{ github.workspace }}/store/lastCommitChecked"
          echo "${{ needs.shouldbuild.outputs.currWebRelease }}" > "${{ github.workspace }}/store/lastWebRelease"
      - name: Commit
        uses: github-actions-x/commit@v2.9
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: Update store
          files: ${{ github.workspace }}/store/
          force-add: true
          name: GitHub Actions
          email: actions@github.com
